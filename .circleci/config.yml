# This file is generated by script/generate_circleci.clj. Please do not edit here.
version: 2.1
jobs:
  hsqldb-linux:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: hsqldb}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  hsqldb-linux-static:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux-static, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, BABASHKA_STATIC: 'true', BABASHKA_MUSL: 'true', POD_DB_TYPE: hsqldb}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  hsqldb-mac:
    macos: {xcode: 12.0.0}
    environment: {GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.1.0/Contents/Home, BABASHKA_PLATFORM: macos, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: hsqldb}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |
          script/install-clojure /usr/local
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  mysql-linux-static:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux-static, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, BABASHKA_STATIC: 'true', BABASHKA_MUSL: 'true', POD_DB_TYPE: mysql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  mysql-mac:
    macos: {xcode: 12.0.0}
    environment: {GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.1.0/Contents/Home, BABASHKA_PLATFORM: macos, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: mysql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |
          script/install-clojure /usr/local
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  postgresql-linux:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: postgresql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  postgresql-linux-static:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux-static, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, BABASHKA_STATIC: 'true', BABASHKA_MUSL: 'true', POD_DB_TYPE: postgresql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  postgresql-mac:
    macos: {xcode: 12.0.0}
    environment: {GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.1.0/Contents/Home, BABASHKA_PLATFORM: macos, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: postgresql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |
          script/install-clojure /usr/local
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  oracle-linux:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: oracle}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  oracle-linux-static:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux-static, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, BABASHKA_STATIC: 'true', BABASHKA_MUSL: 'true', POD_DB_TYPE: oracle}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  oracle-mac:
    macos: {xcode: 12.0.0}
    environment: {GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.1.0/Contents/Home, BABASHKA_PLATFORM: macos, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: oracle}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |
          script/install-clojure /usr/local
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  mssql-linux:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: mssql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  mssql-linux-static:
    docker:
    - {image: 'circleci/clojure:lein-2.9.3-buster'}
    working_directory: ~/repo
    environment: {LEIN_ROOT: 'true', GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.1.0, BABASHKA_PLATFORM: linux-static, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, BABASHKA_STATIC: 'true', BABASHKA_MUSL: 'true', POD_DB_TYPE: mssql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |2-

          wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
          chmod +x linux-install-1.10.2.796.sh
          sudo ./linux-install-1.10.2.796.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
  mssql-mac:
    macos: {xcode: 12.0.0}
    environment: {GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.1.0/Contents/Home, BABASHKA_PLATFORM: macos, BABASHKA_TEST_ENV: native, BABASHKA_XMX: -J-Xmx7g, POD_TEST_ENV: native, POD_DB_TYPE: mssql}
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys: ['mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}']
    - run:
        name: Install Clojure
        command: |
          script/install-clojure /usr/local
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-21.1.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-21.1.0.tar.gz
          fi
    - run:
        name: Build binary
        command: |
          # script/uberjar
          script/compile
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run: {name: Install bb, command: 'bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)'}
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths: [~/.m2, ~/graalvm-ce-java11-21.1.0]
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts: {path: /tmp/release, destination: release}
workflows:
  version: 2
  ci:
    jobs: [hsqldb-linux-static, hsqldb-mac, mysql-linux-static, mysql-mac, postgresql-linux-static, postgresql-mac, oracle-linux-static, oracle-mac, mssql-linux-static, mssql-mac]
