# This file is generated by script/generate_circleci.clj. Please do not edit here.
version: 2.1
jobs:
  hsqldb-linux:
    docker:
    - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'true'
      POD_DB_TYPE: hsqldb
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  hsqldb-linux-aarch64:
    machine:
      image: ubuntu-2004:2024.05.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'false'
      BABASHKA_ARCH: aarch64
      POD_DB_TYPE: hsqldb
    resource_class: arm.large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: echo 'Skipping tests for ARM'
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  hsqldb-mac:
    macos:
      xcode: 13.4.1
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      BABASHKA_PLATFORM: macos
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      POD_DB_TYPE: hsqldb
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Rosetta
        command: sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Fix ssl libs for tests
        command: |2+

          # sudo ln -s /usr/local/opt/openssl@3/lib/libssl.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

          # sudo ln -s /usr/local/opt/openssl@3/lib/libcrypto.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  duckdb-linux:
    docker:
    - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'true'
      POD_DB_TYPE: duckdb
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  duckdb-linux-aarch64:
    machine:
      image: ubuntu-2004:2024.05.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'false'
      BABASHKA_ARCH: aarch64
      POD_DB_TYPE: duckdb
    resource_class: arm.large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: echo 'Skipping tests for ARM'
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  duckdb-mac:
    macos:
      xcode: 13.4.1
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      BABASHKA_PLATFORM: macos
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      POD_DB_TYPE: duckdb
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Rosetta
        command: sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Fix ssl libs for tests
        command: |2+

          # sudo ln -s /usr/local/opt/openssl@3/lib/libssl.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

          # sudo ln -s /usr/local/opt/openssl@3/lib/libcrypto.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  mysql-linux:
    docker:
    - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'true'
      POD_DB_TYPE: mysql
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  mysql-linux-aarch64:
    machine:
      image: ubuntu-2004:2024.05.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'false'
      BABASHKA_ARCH: aarch64
      POD_DB_TYPE: mysql
    resource_class: arm.large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: echo 'Skipping tests for ARM'
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  mysql-mac:
    macos:
      xcode: 13.4.1
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      BABASHKA_PLATFORM: macos
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      POD_DB_TYPE: mysql
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Rosetta
        command: sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Fix ssl libs for tests
        command: |2+

          # sudo ln -s /usr/local/opt/openssl@3/lib/libssl.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

          # sudo ln -s /usr/local/opt/openssl@3/lib/libcrypto.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  postgresql-linux:
    docker:
    - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'true'
      POD_DB_TYPE: postgresql
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  postgresql-linux-aarch64:
    machine:
      image: ubuntu-2004:2024.05.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'false'
      BABASHKA_ARCH: aarch64
      POD_DB_TYPE: postgresql
    resource_class: arm.large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: echo 'Skipping tests for ARM'
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  postgresql-mac:
    macos:
      xcode: 13.4.1
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      BABASHKA_PLATFORM: macos
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      POD_DB_TYPE: postgresql
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Rosetta
        command: sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Fix ssl libs for tests
        command: |2+

          # sudo ln -s /usr/local/opt/openssl@3/lib/libssl.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

          # sudo ln -s /usr/local/opt/openssl@3/lib/libcrypto.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  oracle-linux:
    docker:
    - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'true'
      POD_DB_TYPE: oracle
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  oracle-linux-aarch64:
    machine:
      image: ubuntu-2004:2024.05.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'false'
      BABASHKA_ARCH: aarch64
      POD_DB_TYPE: oracle
    resource_class: arm.large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: echo 'Skipping tests for ARM'
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  oracle-mac:
    macos:
      xcode: 13.4.1
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      BABASHKA_PLATFORM: macos
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      POD_DB_TYPE: oracle
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Rosetta
        command: sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Fix ssl libs for tests
        command: |2+

          # sudo ln -s /usr/local/opt/openssl@3/lib/libssl.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

          # sudo ln -s /usr/local/opt/openssl@3/lib/libcrypto.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  mssql-linux:
    docker:
    - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'true'
      POD_DB_TYPE: mssql
    resource_class: large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |-
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
          sudo -E script/setup-musl
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  mssql-linux-aarch64:
    machine:
      image: ubuntu-2004:2024.05.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: 'true'
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      BABASHKA_PLATFORM: linux
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      BABASHKA_STATIC: 'true'
      BABASHKA_MUSL: 'false'
      BABASHKA_ARCH: aarch64
      POD_DB_TYPE: mssql
    resource_class: arm.large
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install lsof
        command: |
          sudo apt-get install lsof
    - run:
        name: Install native dev tools
        command: |
          sudo apt-get update
          sudo apt-get -y install gcc g++ zlib1g-dev make
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: echo 'Skipping tests for ARM'
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
  mssql-mac:
    macos:
      xcode: 13.4.1
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      MACOSX_DEPLOYMENT_TARGET: '10.13'
      BABASHKA_PLATFORM: macos
      BABASHKA_TEST_ENV: native
      BABASHKA_XMX: -J-Xmx7g
      POD_TEST_ENV: native
      POD_DB_TYPE: mssql
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update
    - restore_cache:
        keys:
        - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - run:
        name: Install Rosetta
        command: sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
    - run:
        name: Install Clojure
        command: |2

          curl -L -O https://github.com/clojure/brew-install/releases/latest/download/posix-install.sh

          chmod +x posix-install.sh

          sudo ./posix-install.sh
    - run:
        name: Install Leiningen
        command: |
          script/install-leiningen
    - run:
        name: Download GraalVM
        command: |2-

          cd ~
          ls -la
          if ! [ -d graalvm-ce-java11-22.3.0 ]; then
            curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
          fi
    - run:
        name: Install bb
        command: bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir $(pwd)
    - run:
        name: Fix ssl libs for tests
        command: |2+

          # sudo ln -s /usr/local/opt/openssl@3/lib/libssl.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

          # sudo ln -s /usr/local/opt/openssl@3/lib/libcrypto.1.0.0.dylib /usr/local/opt/openssl/lib/libssl.1.0.0.dylib

    - run:
        name: Build binary
        command: ./bb script/compile.clj
        no_output_timeout: 30m
    - run:
        name: Run tests
        command: |
          script/test
    - run:
        name: Release
        command: |
          .circleci/script/release
    - save_cache:
        paths:
        - ~/.m2
        key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
    - store_artifacts:
        path: /tmp/release
        destination: release
workflows:
  version: 2
  ci:
    jobs:
    - hsqldb-linux
    - hsqldb-linux-aarch64
    - hsqldb-mac
    - duckdb-linux
    - duckdb-linux-aarch64
    - duckdb-mac
    - mysql-linux
    - mysql-linux-aarch64
    - mysql-mac
    - postgresql-linux
    - postgresql-linux-aarch64
    - postgresql-mac
    - oracle-linux
    - oracle-linux-aarch64
    - oracle-mac
    - mssql-linux
    - mssql-linux-aarch64
    - mssql-mac
